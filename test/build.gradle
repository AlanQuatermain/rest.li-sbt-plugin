/*
   Copyright (c) 2014 LinkedIn Corp.

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
apply plugin: 'scala'

dependencies {
  compile externalDependency.scalaLibrary
  testCompile externalDependency.testng
  testCompile externalDependency.commonsIo
}

/**
 * Test that artifacts published by SBT are correct.
 *
 * This test task requires that the current version of the restli-sbt-project (in the root gradle.properties) has been published.
 * It should be published to local repo using "gradle install".  The version in gradle.properties should be bumped whenever
 * publishing to maven central such that it is always be a newer version than what been published to maven central.
 *
 * This tasks also requires sbt be installed on the system where it is run.
 *
 * This task will build our test project using sbt, failing the gradle build if sbt fails.
 */
task publishClientServerWithSBT(type:Exec) {
  workingDir = 'clientserver'
  commandLine 'sbt', "-DrestliSbtPluginVersion=${version}", "-DpegasusVersion=${pegasusVersion}", 'publish'
}

task integrationTest(type: Test, dependsOn: publishClientServerWithSBT) {
  useTestNG()
  systemProperties['test.artifactsDir'] = project.projectDir.path + File.separator + "clientserver" + File.separator + 'artifacts'
}

clean {
  delete "clientserver" + File.separator + "artifacts"
  delete "clientserver" + File.separator + "project" + File.separator + "target"
  delete "clientserver" + File.separator + "project" + File.separator + "project" + File.separator + "target"
  delete "clientserver" + File.separator + "data-template" + File.separator + "target"
  delete "clientserver" + File.separator + "data-template" + File.separator + "src" + File.separator + "main" + File.separator + "codegen"
  delete "clientserver" + File.separator + "rest" + File.separator + "target"
  delete "clientserver" + File.separator + "server" + File.separator + "target"
}
