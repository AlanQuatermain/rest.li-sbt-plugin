/*
   Copyright (c) 2014 LinkedIn Corp.

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/


project.ext.isDefaultEnvironment = !project.hasProperty('overrideBuildEnvironment')

File getEnvironmentScript()
{
  final File env = file(isDefaultEnvironment ? 'defaultEnvironment.gradle' : project.overrideBuildEnvironment)
  assert env.isFile() : "The environment script [$env] does not exists or is not a file."
  return env
}

apply from: environmentScript

apply plugin: 'idea'
apply plugin: 'eclipse'

project.ext.externalDependency = [
  // org.scala-sbt:sbt is depended on directly in sbt-plugin/build.gradle
  'scalaCompiler': "org.scala-lang:scala-compiler:${scalaExactVersion}",
  'scalaLibrary': "org.scala-lang:scala-library:${scalaExactVersion}",
  'scalaReflect': "org.scala-lang:scala-reflect:${scalaExactVersion}",
  'log4jOverSlf4j': "org.slf4j:log4j-over-slf4j:1.7.5",
  'restliGenerator': "com.linkedin.pegasus:generator:${pegasusVersion}",
  'restliTools': "com.linkedin.pegasus:restli-tools:${pegasusVersion}",
  'restliToolsScala': "com.linkedin.pegasus:restli-tools-scala_${scalaMajorVersion}:${pegasusVersion}"
]

subprojects {
  apply plugin: 'java'

  apply plugin: 'idea'
  apply plugin: 'eclipse'

  configurations.all {
    // Avoid conflicts with google guava
    exclude group: 'com.google.collections', module: 'google-collections'
    // Avoid older kafka builds with incompatible scala versions
    exclude group: 'kafka'
    // Avoid conflicts with logback
    exclude group: 'log4j', module: 'log4j'
    exclude group: 'org.slf4j', module: 'slf4j-log4j12'
    // not sure how this got pulled in, we will fix the underlying rest.li issue,  excluding it until we resolve
    exclude group: 'com.linkedin.pegasus', module: 'log-test-config'
  }

  if (isDefaultEnvironment)
  {
    apply plugin: 'maven'
    apply plugin: 'signing'

    project.group = 'com.linkedin.pegasus'
    project.version = version

    repositories {
      mavenLocal()
      mavenCentral()
  
      /*
       * Typesafe's repo is a mess.  They have mixed maven (.pom) and ivy into the same tree.  Some artifacts
       * are only published as maven, others only as ivy.  Looks like there are even some that are published as both.
       *
       * Their ivy paths are non-standard so they can cross compile to scala and sbt versions.
       * But it appears inconsistent, scala version and sbt versions number in some paths, but not for others, even
       * for artifacts that are scala version dependant.
       */
      maven {
        url "http://repo.typesafe.com/typesafe/releases/"
      }
  
      ivy {
        url "http://repo.typesafe.com/typesafe/releases/"
        layout "pattern", {
          ivy "[organisation]/[module]/scala_${scalaMajorVersion}/sbt_${sbtMajorVersion}/[revision]/ivys/ivy.xml"
          artifact "[organisation]/[module]/scala_${scalaMajorVersion}/sbt_${sbtMajorVersion}/[revision]/jars/[artifact].[ext]"
          ivy "[organisation]/[module]/[revision]/ivys/ivy.xml"
          artifact "[organisation]/[module]/[revision]/jars/[artifact].[ext]"
        }
      }
    }
  
    task sourcesJar(type: Jar, dependsOn: classes) {
      from sourceSets.main.allSource
      classifier = 'sources'
    }
  
    task javadocJar(type: Jar, dependsOn: javadoc) {
      from javadoc.destinationDir
      classifier = 'javadoc'
    }
  
    artifacts {
      archives jar
      archives sourcesJar
      archives javadocJar
    }
  
    signing {
      required = { gradle.taskGraph.hasTask("uploadArchives") }
      sign configurations.archives
    }
  
    uploadArchives {
      repositories {
        mavenDeployer {
          beforeDeployment { MavenDeployment deployment -> signPom(deployment) }
  
          repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
            authentication(userName: sonatypeUsername, password: sonatypePassword)
          }
          
          pom.project {
            name project.name
            packaging 'jar'
            description 'SBT plugin for rest.li that provides all the build tasks required to build rest.li applications.'
            url 'http://github.com/linkedin/rest.li-sbt-plugin'
  
            scm {
              url 'git@github.com:linkedin/rest.li-sbt-plugin.git'
              connection 'scm:git:git@github.com:linkedin/rest.li-sbt-plugin.git'
              developerConnection 'scm:git:git@github.com:linkedin/rest.li-sbt-plugin.git'
            }
  
            licenses {
              license {
                name 'The Apache Software License, Version 2.0'
                url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                distribution 'repo'
              }
            }
            developers {
              developer {
                id 'jpbetz'
                name 'Joe Betz'
              }
              developer {
                id 'brikis98'
                name 'Jim Brikman'
              }
              developer {
                name 'Dean Thompson'
              }
            }
          }
        }
      }
    }
  }
}

